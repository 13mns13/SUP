import FormControlLabel from '@material-ui/core/FormControlLabel';
import Checkbox from '@material-ui/core/Checkbox';

import '../styles/registration.css'

import {Fragment, useState} from 'react';
import * as React from "react";
import Header2 from "./Header2";
import FetchData from "./FetchData";
import {useHistory} from "react-router-dom";

export default function Registration({customHistory}) {
    const fetchData = new FetchData()
    const [isRegistered, setIsRegistered] = useState(true)
    const buttonHandler = () => {
        setIsRegistered(current => !current)
    }

    const history = useHistory();
    const navigateToHome = () => history.push('/home');

    const [state, setState] = React.useState({
        checkedBoy: true,
        checkedStudent: true,
        last_name: "",
        first_name: "",
        email: "",
        password1: "",
        password2: "",
        date: 0,
    });

    const register = () => {
        let data = {
            last_name: state.last_name,
            first_name: state.first_name,
            email: state.email,
            password1: state.password1,
            password2: state.password2,
            birthday: state.date,
            sex: state.checkedBoy,
            teacher: !state.checkedStudent
        }
        fetchData.reg(data).then(e => {
            console.log(e)
            if (e.success) {
                localStorage.setItem("token", e.token)

            }
        })
    }

    const login = () => {
        let data = {
            email: state.email,
            password: state.password1,
        }
        fetchData.login(data).then(e => {
            console.log(e)
            if (e.success) {
                localStorage.setItem("token", e.token)
                navigateToHome()

            }
        })
    }

    const handleChange = (event) => {
        setState({...state, [event.target.name]: event.target.value});

    };

    const changeDate = (event) => {
        setState({...state, [event.target.name]: event.target.valueAsNumber / 1000})
    }
    return (
        <div className="reg_main_container">
            <div className="reg_welcome">
                <div className="reg_welcome_title">
                    üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
                </div>

                <div className="reg_welcome_subtitle">
                    –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–π–¥–∏—Ç–µ, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏–ª–∏ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–π –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
                </div>

                <div className="reg_welcome_learning">
                    <div className="reg_welcome_learning_title">
                        –í—ã —É–∂–µ —É—á–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ?
                    </div>

                    <div className="reg_welcome_learning_btns">
                        <button className={`reg_btn ${!isRegistered && "reg_active"}`} onClick={buttonHandler}>
                            –ù–µ—Ç
                        </button>

                        <button className={`reg_btn ${isRegistered && "reg_active"}`} onClick={buttonHandler}>
                            –î–∞
                        </button>
                    </div>

                    <div className="reg_welcome_learning_title">
                        {isRegistered ?
                            "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!"
                            :
                            "–û—É, –≤—ã —É –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!"}
                    </div>
                </div>
            </div>


            <div className="reg_form">
                {isRegistered ?
                    <Fragment>
                        <input type="email" className="reg_form_input" placeholder="–ü–æ—á—Ç–∞" name="email"
                               onChange={handleChange}/>
                        <input type="password" className="reg_form_input" placeholder="–ü–∞—Ä–æ–ª—å" name="password1"
                               onChange={handleChange}/>
                    </Fragment>
                    :
                    <Fragment>
                        <input type="text" className="reg_form_input" name="first_name" placeholder="–ò–º—è"
                               onChange={handleChange}/>
                        <input type="text" className="reg_form_input" name="last_name" placeholder="–§–∞–º–∏–ª–∏—è"
                               onChange={handleChange}/>
                        <input type="email" className="reg_form_input" placeholder="–ü–æ—á—Ç–∞" name="email"
                               onChange={handleChange}/>
                        <input type="date" className="reg_form_input" placeholder="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è" name="date"
                               onChange={changeDate}/>
                        <input type="password" className="reg_form_input" placeholder="–ü–∞—Ä–æ–ª—å" name="password1"
                               onChange={handleChange}/>
                        <input type="password" className="reg_form_input" placeholder="–ü–æ–≤—Ç–æ—Ä –ø–∞—Ä–æ–ª—è" name="password2"
                               onChange={handleChange}/>
                        <div className="reg_form_block">
                            <FormControlLabel
                                control={
                                    <Checkbox
                                        checked={state.checkedBoy}
                                        onChange={() => {
                                            state.checkedBoy = true;
                                            setState({...state})
                                        }
                                        }
                                        name="checkedBoy"
                                        color="primary"
                                    />
                                }
                                label="–Ø –º–∞–ª—å—á–∏–∫"
                            />

                            <FormControlLabel
                                control={
                                    <Checkbox
                                        checked={!state.checkedBoy}
                                        onChange={() => {
                                            state.checkedBoy = false;
                                            setState({...state})
                                        }
                                        }
                                        name="checkedBoy"
                                        color="primary"
                                    />
                                }
                                label="–Ø –¥–µ–≤–æ—á–∫–∞"
                            />
                        </div>

                        <div className="reg_form_block">
                            <FormControlLabel
                                control={
                                    <Checkbox
                                        checked={state.checkedStudent}
                                        onChange={() => {
                                            state.checkedStudent = true;
                                            setState({...state})
                                        }
                                        }
                                        name="checkedBoy"
                                        color="primary"
                                    />
                                }
                                label="–Ø —É—á–µ–Ω–∏–∫"
                            />

                            <FormControlLabel
                                control={
                                    <Checkbox
                                        checked={!state.checkedStudent}
                                        onChange={() => {
                                            state.checkedStudent = false;
                                            setState({...state})
                                        }
                                        }
                                        name="checkedBoy"
                                        color="primary"
                                    />
                                }
                                label="–Ø –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
                            />
                        </div>
                    </Fragment>
                }

                {isRegistered ?
                    <button className="reg_form_submit" onClick={() => login()}>
                        –í–æ–π—Ç–∏
                    </button>
                    :
                    <button className="reg_form_submit" onClick={() => register()}>
                        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    </button>
                }

            </div>
        </div>
    )

}